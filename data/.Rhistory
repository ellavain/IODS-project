80!/(2!*78!)
install.packages(ggplot2)
"ggplot2"
install.packages("dplyr")
install.packages("ggplot2")
install.packages("ggplot2")
dim(url)
dim(url)
str(student_mat)
dim(student_mat)
str(student_por)
dim(student_por)
View(student_mat)
View(student_mat)
url <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=",", header=TRUE)
student_mat <-read.table("student-mat.csv", sep = ";", header = TRUE)
student_por <-read.table("student-por.csv", sep = ";", header = TRUE)
str(student_mat)
str(student_mat)
str(student_por)
url <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=",", header=TRUE)
url <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=",", header=TRUE)
url <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=",", header=TRUE)
student_mat <-read.table("student-mat.csv", sep = ";", header = TRUE)
url <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=",", header=TRUE)
student_mat <-read.table("student-mat.csv", sep = ";", header = TRUE)
student_por <-read.table("student-por.csv", sep = ";", header = TRUE)
dim(url)
str(url)
dim(student_mat)
str(student_mat)
dim(student_por)
str(student_por)
dim(url)
str(url)
table(url$failure)
str(url)
dim(url)
str(url$alc_use)
summay(url$alc_use)
summary(url$alc_use)
table(url$alc_use)
table(url$high_use)
student_por <-read.table("student-por.csv", sep = ";", header = TRUE)
str(student_mat)
table(url$failure)
table(url$failure)
table(url$failure)
Here we can se the distribution of how many has failed their courses. A vast majority has not failed a course, and only 66 people has failed once or more.
table(url$failure)
head(url$failure)
g1 <- ggplot(url, aes(x = high_use, y = failures, col = sex))
g1
table(url$failure)
table(url$high_use)
head(url$failure)
head(url$failure)
table(url$failure)
url <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=",", header=TRUE)
student_mat <-read.table("student-mat.csv", sep = ";", header = TRUE)
dim(url)
str(url)
table(url$alc_use)
table(url$high_use)
1. table(url$failure)
table(url$failure)
table(url$absences)
table(url$famrel)
table(url$goout)
table(url$high_use)
table(url$alc_use)
table(url$alc_use)
g1 <- ggplot(data = url, aes(x = alc_use, fill = sex))
installed.packages("ggplot")
g1 <- plot(url, aes(x = high_use, y = failures, col = sex))
g1 <- pairs(url, aes(x = high_use, y = failures, col = sex))
g1 <- ggplot(data = url, aes(x = alc_use, fill = sex))
g1 <- plot(data = url, aes(x = alc_use, fill = sex))
install.packages("tidyverse")
g1 <- plot(data = url, aes(x = alc_use, fill = sex))
library(dplyr); library(ggplot2)
library(dplyr); library(ggplot2)
g1 <- ggplot(data = alc, aes(x = alc_use, fill = sex))
g1 <- ggplot(data = alc, aes(x = alc_use, fill = sex))
g1 <- ggplot(data = url, aes(x = alc_use, fill = sex))
g1
g1 + geom_bar()
library(tidyr); library(dplyr); library(ggplot2)
g1 <- ggplot(alc, aes(x = high_use, y = G3, col = sex))
g1 <- ggplot(url, aes(x = high_use, y = G3, col = sex))
g2 <- ggplot(url, aes(x = high_use, y = G3, col = sex))
g1 <- ggplot(data = url, aes(x = alc_use, fill = sex))
g1 + geom_bar()
library(tidyr); library(dplyr); library(ggplot2)
g2 + geom_boxplot() + ylab("grade")
g2 + geom_boxplot() + ylab("absences")
g2 + geom_boxplot() + ylab("grades")
g2 <- ggplot(url, aes(x = high_use, y = absences, col = sex))
g2 + geom_boxplot() + ylab("absences")
table(url$failures)
tables(url$absences)
table(url$absences)
url <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=",", header=TRUE)
library(tidyr); library(dplyr); library(ggplot2)
library(tidyr); library(dplyr); library(ggplot2)
g3 <- ggplot(data = url, aes(x = failures, fill = sex))
g3 + geom_bar()
g3 <- ggplot(data = url, aes(x = absences, fill = sex))
g3 <- ggplot(data = url, aes(x = failures, fill = sex))
g3 + geom_bar()
g4 <- ggplot(data = url, aes(x = absences, fill = sex))
g4 + geom_bar()
table(url$famrel)
g5 <- ggplot(data = url, aes(x = famrel, fill = sex))
g5 + geom_bar()
table(url$goout)
g6 <- ggplot(data = url, aes(x = goout, fill = sex))
g6 + geom_bar()
table(url$alc_use)
g7 <- ggplot(data = url, aes(x = alc_use, fill = sex))
g7 + geom_bar()
table(url$high_use)
g8 <- ggplot(data = url, aes(x = high_use, fill = sex))
g8 + geom_bar()
g41 <- ggplot(url, aes(x = high_use, y = absences, col = sex))
g41 + geom_boxplot() + ylab("absences")
g31 <- ggplot(url, aes(x = alc_use, y = failures, col = sex))
g31 + geom_boxplot() + ylab("failures")
g31 <- ggplot(url, aes(x = failures, y = alc_use, col = sex))
g31 + geom_boxplot() + ylab("alc_use")
g31 <- ggplot(url, aes(x = failures, y = alc_use, col = sex))
g31 + geom_bar() + ylab("alc_use")
g31 + geom_barplot() + ylab("alc_use")
g31 <- ggplot(url, aes(x = high_use, y = failures, col = sex))
g31 + geom_boxplot() + ylab("failures")
g31 + geom_point() + ylab("failures")
g31 + geom_histogram() + ylab("failures")
g31 + geom_bar() + ylab("failures")
g31 + geom_bar()
g32 <-g31 + geom_bar()
g32
g31
g32 <-g31 + geom_bar()
g32 <-g31 + geom_bar()
p111 <- ggplot(url, aes(x = failures, y = high_use, col = sex))
p112 <- p111 + geom_bar()
p112 <- p111 + geom_bar()
p112 <- p111 + geom_boxplot()
p111 <- ggplot(url, aes(x = high_use, y = failures, col = sex))
p112 <- p111 + geom_boxplot() + ylab("failures")
p111 <- ggplot(url, aes(x = high_use, y = failures, col = sex))
p112 <- p111 + geom_boxplot() + ylab("failures")
p112
p112 <- p111 + geom_bar() + ylab("failures")
p112
p111 <- plot(url, aes(x = high_use, y = failures, col = sex))
p111 <- gplot(url, aes(x = high_use, y = failures, col = sex))
p111 <- ggplot(url, aes(x = high_use, y = failures, col = sex))
p112 <- p111 + geom_bar() + ylab("failures")
p112
p112 <- p111 + geom_point() + ylab("failures")
p112
p112 <- p111 + geom_histogram() + ylab("failures")
p112
p111 <-qplot(url, aes(x = high_use, y = failures, col = sex))
p112 <- p111 + geom_bar() + ylab("failures")
p112
p111 <-qplot(url, aes(x = high_use, y = failures, col = sex, alpha = 0,3))
p112 <- p111 + geom_bar() + ylab("failures")
p112
p111 <-qplot(url, aes(x = high_use, y = failures, col = sex, alpha = 0,3, length(1)))
p112 <- p111 + geom_bar() + ylab("failures")
p112
p111 <- plot(url$high_use, url$failures)
high_use <-url$high_use
p111 <- plot(high_use,failures)
p111 <- plot(high_use,url$failures)
p111 <- barplot(high_use,url$failures)
p111 <- boxplot(high_use,url$failures)
p111 <- boxplot(alc_use,url$failures)
alc_use <-url$alc_use
p111 <- boxplot(alc_use,url$failures)
p111 <- histogram(alc_use,url$failures)
p111 <- barplot(alc_use,url$failures)
p111 <- barplot(url$failures, alc_use)
g31 <- ggplot(data = url, aes(x = failures, y = alc_use, fill = sex))
g31 + geom_bar()
g31 <- ggplot(data = url, x = failures, y = alc_use, fill = sex)
g31 + geom_bar()
g31 <- ggplot(data = url, aes(x = failures, y = alc_use, fill = sex))
g31
g31 + geom_point()
g31 + geom_jitter()
cor(alc_use, url$failures)
m <- glm(alc_use ~ failures, data = url)
summary(m)
coef(m)
summary(m)
coef(m)
g51 <- ggplot(data = url, aes(x = famrel, y = alc_use, fill = sex))
g51 + geom_bar()
g51 + geom_bar() + ylab(alc_use)
g51 + geom_jitter() + ylab(alc_use)
g51 <- ggplot(data = url, aes(x = famrel, y = alc_use, col = sex))
g51 + geom_jitter() + ylab(alc_use)
g51 <- ggplot(data = url, aes(x = famrel, y = alc_use))
g51 + geom_jitter() + ylab(alc_use)
g31 <- ggplot(data = url, aes(x = failures, y = alc_use, col = sex))
g31 + geom_jitter()
g51 <- ggplot(data = url, aes(x = famrel, y = alc_use, col = sex))
g51 + geom_jitter() + ylab(alc_use)
n <- glm(alc_use ~ famrel, data = url)
summary(n)
coef(n)
g61 <- ggplot(data = url, aes(x = goout, y = alc_use, col = sex))
g61 + geom_jitter() + ylab(alc_use)
g51 <- gml(ggplot(data = url, aes(x = famrel, y = alc_use, col = sex)))
g51 <- glm(ggplot(data = url, aes(x = famrel, y = alc_use, col = sex)))
g51 <- glm(data = alc, x = famrel, y = alc_use, col = sex)
g51 <- glm(data = url, x = famrel, y = alc_use, col = sex)
g51 <- glm(data = url, x = famrel, y = alc_use, col = gender)
g51 <- glm(data = url, x = famrel, y = alc_use)
g51 <- ggplot(data = url, aes(x = famrel, y = alc_use, col = sex))
g51 + geom_jitter() + ylab(alc_use)
g31 <-ml(data = url, aes(x = failures, y = alc_use, col = sex))
g31 <-lm(data = url, aes(x = failures, y = alc_use, col = sex))
g31 <-gml(data = url, aes(x = failures, y = alc_use, col = sex))
g31 <-glm(data = url, aes(x = failures, y = alc_use, col = sex))
g31 <- ggplot(data = url, aes(x = failures, y = alc_use, col = sex))
g31 + geom_jitter() + ylab(alc_use)
e <- glm(alc_use ~ goout, data = url)
summary(e)
f <- glm(alc_use ~ failures + absences + goout + famrel, data = url, family = "binomial")
f <- glm(high_use ~ failures + absences + goout + famrel, data = url, family = "binomial")
summary(f)
f2 <- glm(high_use ~ + absences + goout + famrel, data = url, family = "binomial")
summary(f1)
summary(f2)
OR <- coef(f1) %>% exp()
OR <- coef(f2) %>% exp()
CI <- confint(f2) %>% exp()
cbind(OR, CI)
summary(lm(high_use ~ absences, goout, famrel, data = url))
summary(glm(high_use ~ absences, goout, famrel, data = url))
f2 <- glm(high_use ~ absences + goout + famrel, data = url, family = "binomial")
probabilities <- predict(f1, type = "response")
probabilities <- predict(f1)
probabilities <- predict(f2)
url <- mutate(url, probability = probabilities)
url <- mutate(url, prediction = probability > 0.5)
table(high_use = url$high_use, prediction = url$prediction)
t <- ggplot(url, aes(x = probability, y = high_use, col = prediction))
t + geom_point()
t + geom_jitter()
t + geom_bar()
t + geom_area()
t + geom_histogram()
t + geom_point()
table(high_use = url$high_use, prediction = url$prediction) %>% prop.table %>% addmargins
CI <- confint(f2) %>% exp()
g31 <- ggplot(data = url, aes(x = failures, y = high_use, col = sex))
g31 + geom_jitter() + ylab(alc_use)
library(tidyr); library(dplyr); library(ggplot2)
library(tidyr); library(dplyr); library(ggplot2)
g41 <- ggplot(url, aes(x = high_use, y = absences, col = sex))
g41 + geom_boxplot() + ylab("absences")
g31 <- ggplot(data = url, aes(x = failures, y = high_use, col = sex))
g31 + geom_jitter() + ylab(alc_use)
g51 <- ggplot(data = url, aes(x = famrel, y = high_use, col = sex))
g51 + geom_jitter() + ylab(alc_use)
g61 <- ggplot(data = url, aes(x = goout, y = high_use, col = sex))
g61 + geom_jitter() + ylab(high_use)
e <- glm(high_use ~ goout, data = url)
summary(e)
f <- glm(high_use ~ failures + absences + goout + famrel, data = url, family = "binomial")
summary(f)
OR <- coef(f2) %>% exp()
CI <- confint(f2) %>% exp()
g31 + geom_jitter() + ylab(high_use)
m <- glm(high_use ~ failures, data = url)
summary(m)
g51 + geom_jitter() + ylab(high_use)
n <- glm(high_use ~ famrel, data = url)
summary(n)
install.packages("boot")
probabilities <- predict(f2)
probabilities <- predict(f2, type = "response"))
probabilities <- predict(f2, type = "response")
url <- mutate(url, probability = probabilities)
url <- mutate(url, prediction = probability > 0.5)
table(high_use = url$high_use, prediction = url$prediction)
t <- ggplot(url, aes(x = probability, y = high_use, col = prediction))
t + geom_point()
table(high_use = url$high_use, prediction = url$prediction) %>% prop.table %>% addmargins
loss_func <- function(class, prob) {
n_wrong <- url(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = url$high_use, prob = url$probability)
loss_func(class = high_use, prob = url$probability)
loss_func(class = high_use, prob = probability)
loss_func(class = high_use, prob = url$probability)
loss_func(class = url$high_use, prob = url$probability)
loss_func <- function(class, prob) {
n_wrong <- url(class - prob) > 0.5
mean(n_wrong)
}
View(loss_func)
loss_func(class = high_use, prob = url$probability)
loss_func <- function(class, prob) {
n_wrong <- url(class,prob) > 0.5
mean(n_wrong)
}
loss_func(class = high_use, prob = url$probability)
loss_func(class = url$high_use, prob = url$probability)
library(tidyr); library(dplyr); library(ggplot2); library(boot)
loss_func(class = url$high_use, prob = url$probability)
loss_func(class=url$high_use, prob=url$probability)
loss_func(class=url$high_use, prob=url$probabilities)
loss_func(class=high_use, prob=probabilitiy)
loss_func(class=high_use, prob=probability)
loss_func(class=high_use, prob=probabilities)
loss_func(class=high_use, prob=url$probabilities)
loss_func(class=url$high_use, prob=url$probabilities)
class <- url$high_use
prob <- url$probability
loss_func(class=url$high_use, prob=url$probability)
loss_func <- function(class, prob) {
n_wrong <- url(class, prob) > 0.5
mean(n_wrong)
}
loss_func(class=url$high_use, prob=url$probability)
loss_func(class, prob)
loss_func <- function(class, prob) {
n_wrong <- url(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class, prob)
b <- glm(high_use ~ absences, data = url)
summary(m)
b <- glm(high_use ~ absences, data = url)
summary(b)
```{r child= "chapter4.Rmd"}
```{r child = "chapter4.Rmd"}
```{r child = "chapter4.Rmd"}
```{r child = "chapter4.Rmd"}
library(MASS)
data("Boston")
Boston
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
data("Boston")
str(Boston)
dim(Boston)
summary(Boston)
pairs(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
scaled_crim <- boston_scaled$crim
scaled_crim <- boston_scaled$crim
scaled_crim <- (boston_scaled$crim)
boston_scaled <- scale(Boston)
View(boston_scaled)
summary(boston_scaled)
scaled_crim <- boston_scaled$crim
boston_scaled$crim
boston_scaled
boston_scaled$crim
boston_scaled$"crim"
knitr::opts_chunk$set(echo = TRUE)
class(boston_scaled)
boston_scaled <-as.data.frame(boston_scaled)
scaled_crim <-boston_scaled$crim
bins <- quantile(scaled_crim)
bins
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <-nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda(crime ~ ., data = train)
lda.fit <- lda(crime ~ ., data = train)
lda.fit <- lda(crime ~ ., data = train)
lda.fit <- lda(crime ~ ., data = train)
lda.fit <- lda(crime ~ ., data = train)
lda(crime ~ ., data = train)
install.packages("MASS")
lda.fit <- lda(crime ~ ., data = train)
install.packages("MASS")
lda(crime)
library("MASS")
library("MASS")
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
library("MASS")
hd <- read.csv(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
str(hd)
dim(hd)
str(gii)
dim(gii)
summary(hd)
summary(gii)
str(hd)
dim(hd)
str(gii)
dim(gii)
summary(hd)
summary(gii)
summary(hd)
hd$HumanHDI <- hd$Human.Development.Index..HDI.
hd$LEAB<- hd$Life.Expectancy.at.Birth
hd$EYOE<- hd$Expected.Years.of.Education
hd$HumanHDI <- hd$Human.Development.Index..HDI.
hd$meanEYOE   <-hd$Mean.Years.of.Education
hd$meanEYOE<-hd$Mean.Years.of.Education
hd$GNI<-hd$Gross.National.Income..GNI..per.Capita
hd$GNI-HDI<-hd$GNI.per.Capita.Rank.Minus.HDI.Rank
hd$GNI-HDI <-hd$GNI.per.Capita.Rank.Minus.HDI.Rank
hd$GNI,HDI <-hd$GNI.per.Capita.Rank.Minus.HDI.Rank
hd$GNIHDI <-hd$GNI.per.Capita.Rank.Minus.HDI.Rank
gii$GenderGII <-gii$Gender.Inequality.Index..GII.
gii$MaMo<- gii$Maternal.Mortality.Ratio
gii$adolBR<-gii$Adolescent.Birth.Rate
gii$PRiP<-gii$Percent.Representation.in.Parliament
gii$Popsecedufem<-gii$Population.with.Secondary.Education..Female.
gii$Popsecedumale<-gii$Population.with.Secondary.Education..Male.
gii$Labourfem<-gii$Labour.Force.Participation.Rate..Female.
gii$Labourmale<-gii$Labour.Force.Participation.Rate..Male.
gii <- mutate(gii, secondary_edu = gii$Popsecedufem / gii$Popsecedumale)
library(dplyr); library(ggplot2)
library(dplyr); library(ggplot2)
gii <- mutate(gii, secondary_edu = gii$Popsecedufem / gii$Popsecedumale)
gii <- mutate(gii, secondary_edu = gii$Popsecedufem / gii$Popsecedumale)
gii <- mutate(gii, labour_force = gii$Labourfem / gii$Labourmale)
join_by <-c("gii$Country")
join_by <-c(gii$Country)
joined_data <- inner_join(secondary_edu, labour_force, by = join_by)
gii <- mutate(gii, secondary_edu = gii$Popsecedufem / gii$Popsecedumale)
gii <- mutate(gii, labour_force = gii$Labourfem / gii$Labourmale)
joined_data <- inner_join(gii$secondary_edu, gii$labour_force, by = join_by)
library(MASS)
data("Boston")
dim(Boston)
str(Boston)
summary(Boston)
pairs(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <-as.data.frame(boston_scaled)
scaled_crim <-boston_scaled$crim
bins <- quantile(scaled_crim)
bins
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <-nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
library("MASS")
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
cor_matrix<-cor(Boston) %>% round(digits = 2)
install.package("corrplot")
install.packages("corrplot")
install.packages("tidyverse")
library("tidyverse")
library(tidyverse)
library(corrplot)
install.packages(corrplot)
install.packages(tidyverse)
cor_matrix<-cor(Boston) %>% round(digits = 2)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
