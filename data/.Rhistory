g61 + geom_jitter() + ylab(high_use)
e <- glm(high_use ~ goout, data = url)
summary(e)
f <- glm(high_use ~ failures + absences + goout + famrel, data = url, family = "binomial")
summary(f)
OR <- coef(f2) %>% exp()
CI <- confint(f2) %>% exp()
g31 + geom_jitter() + ylab(high_use)
m <- glm(high_use ~ failures, data = url)
summary(m)
g51 + geom_jitter() + ylab(high_use)
n <- glm(high_use ~ famrel, data = url)
summary(n)
install.packages("boot")
probabilities <- predict(f2)
probabilities <- predict(f2, type = "response"))
probabilities <- predict(f2, type = "response")
url <- mutate(url, probability = probabilities)
url <- mutate(url, prediction = probability > 0.5)
table(high_use = url$high_use, prediction = url$prediction)
t <- ggplot(url, aes(x = probability, y = high_use, col = prediction))
t + geom_point()
table(high_use = url$high_use, prediction = url$prediction) %>% prop.table %>% addmargins
loss_func <- function(class, prob) {
n_wrong <- url(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = url$high_use, prob = url$probability)
loss_func(class = high_use, prob = url$probability)
loss_func(class = high_use, prob = probability)
loss_func(class = high_use, prob = url$probability)
loss_func(class = url$high_use, prob = url$probability)
loss_func <- function(class, prob) {
n_wrong <- url(class - prob) > 0.5
mean(n_wrong)
}
View(loss_func)
loss_func(class = high_use, prob = url$probability)
loss_func <- function(class, prob) {
n_wrong <- url(class,prob) > 0.5
mean(n_wrong)
}
loss_func(class = high_use, prob = url$probability)
loss_func(class = url$high_use, prob = url$probability)
library(tidyr); library(dplyr); library(ggplot2); library(boot)
loss_func(class = url$high_use, prob = url$probability)
loss_func(class=url$high_use, prob=url$probability)
loss_func(class=url$high_use, prob=url$probabilities)
loss_func(class=high_use, prob=probabilitiy)
loss_func(class=high_use, prob=probability)
loss_func(class=high_use, prob=probabilities)
loss_func(class=high_use, prob=url$probabilities)
loss_func(class=url$high_use, prob=url$probabilities)
class <- url$high_use
prob <- url$probability
loss_func(class=url$high_use, prob=url$probability)
loss_func <- function(class, prob) {
n_wrong <- url(class, prob) > 0.5
mean(n_wrong)
}
loss_func(class=url$high_use, prob=url$probability)
loss_func(class, prob)
loss_func <- function(class, prob) {
n_wrong <- url(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class, prob)
b <- glm(high_use ~ absences, data = url)
summary(m)
b <- glm(high_use ~ absences, data = url)
summary(b)
```{r child= "chapter4.Rmd"}
```{r child = "chapter4.Rmd"}
```{r child = "chapter4.Rmd"}
```{r child = "chapter4.Rmd"}
library(MASS)
data("Boston")
Boston
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
data("Boston")
str(Boston)
dim(Boston)
summary(Boston)
pairs(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
scaled_crim <- boston_scaled$crim
scaled_crim <- boston_scaled$crim
scaled_crim <- (boston_scaled$crim)
boston_scaled <- scale(Boston)
View(boston_scaled)
summary(boston_scaled)
scaled_crim <- boston_scaled$crim
boston_scaled$crim
boston_scaled
boston_scaled$crim
boston_scaled$"crim"
knitr::opts_chunk$set(echo = TRUE)
class(boston_scaled)
boston_scaled <-as.data.frame(boston_scaled)
scaled_crim <-boston_scaled$crim
bins <- quantile(scaled_crim)
bins
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <-nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda(crime ~ ., data = train)
lda.fit <- lda(crime ~ ., data = train)
lda.fit <- lda(crime ~ ., data = train)
lda.fit <- lda(crime ~ ., data = train)
lda.fit <- lda(crime ~ ., data = train)
lda(crime ~ ., data = train)
install.packages("MASS")
lda.fit <- lda(crime ~ ., data = train)
install.packages("MASS")
lda(crime)
library("MASS")
library("MASS")
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
library("MASS")
hd <- read.csv(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
str(hd)
dim(hd)
str(gii)
dim(gii)
summary(hd)
summary(gii)
str(hd)
dim(hd)
str(gii)
dim(gii)
summary(hd)
summary(gii)
summary(hd)
hd$HumanHDI <- hd$Human.Development.Index..HDI.
hd$LEAB<- hd$Life.Expectancy.at.Birth
hd$EYOE<- hd$Expected.Years.of.Education
hd$HumanHDI <- hd$Human.Development.Index..HDI.
hd$meanEYOE   <-hd$Mean.Years.of.Education
hd$meanEYOE<-hd$Mean.Years.of.Education
hd$GNI<-hd$Gross.National.Income..GNI..per.Capita
hd$GNI-HDI<-hd$GNI.per.Capita.Rank.Minus.HDI.Rank
hd$GNI-HDI <-hd$GNI.per.Capita.Rank.Minus.HDI.Rank
hd$GNI,HDI <-hd$GNI.per.Capita.Rank.Minus.HDI.Rank
hd$GNIHDI <-hd$GNI.per.Capita.Rank.Minus.HDI.Rank
gii$GenderGII <-gii$Gender.Inequality.Index..GII.
gii$MaMo<- gii$Maternal.Mortality.Ratio
gii$adolBR<-gii$Adolescent.Birth.Rate
gii$PRiP<-gii$Percent.Representation.in.Parliament
gii$Popsecedufem<-gii$Population.with.Secondary.Education..Female.
gii$Popsecedumale<-gii$Population.with.Secondary.Education..Male.
gii$Labourfem<-gii$Labour.Force.Participation.Rate..Female.
gii$Labourmale<-gii$Labour.Force.Participation.Rate..Male.
gii <- mutate(gii, secondary_edu = gii$Popsecedufem / gii$Popsecedumale)
library(dplyr); library(ggplot2)
library(dplyr); library(ggplot2)
gii <- mutate(gii, secondary_edu = gii$Popsecedufem / gii$Popsecedumale)
gii <- mutate(gii, secondary_edu = gii$Popsecedufem / gii$Popsecedumale)
gii <- mutate(gii, labour_force = gii$Labourfem / gii$Labourmale)
join_by <-c("gii$Country")
join_by <-c(gii$Country)
joined_data <- inner_join(secondary_edu, labour_force, by = join_by)
gii <- mutate(gii, secondary_edu = gii$Popsecedufem / gii$Popsecedumale)
gii <- mutate(gii, labour_force = gii$Labourfem / gii$Labourmale)
joined_data <- inner_join(gii$secondary_edu, gii$labour_force, by = join_by)
library(MASS)
data("Boston")
dim(Boston)
str(Boston)
summary(Boston)
pairs(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <-as.data.frame(boston_scaled)
scaled_crim <-boston_scaled$crim
bins <- quantile(scaled_crim)
bins
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <-nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
library("MASS")
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
cor_matrix<-cor(Boston) %>% round(digits = 2)
install.package("corrplot")
install.packages("corrplot")
install.packages("tidyverse")
library("tidyverse")
library(tidyverse)
library(corrplot)
install.packages(corrplot)
install.packages(tidyverse)
cor_matrix<-cor(Boston) %>% round(digits = 2)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
library(dplyr); library(ggplot2)
library(dplyr); library(ggplot2)
human <- inner_join(gii, hd, by = Country, suffix = c(".hd", ".gii"))
gii$secedufem<-gii$Population.with.Secondary.Education..Female.
gii$secedumale<-gii$Population.with.Secondary.Education..Male.
gii <- mutate(gii, secondary_edu = gii$secedufem / gii$secedumale)
gii <- mutate(gii, labour_force = gii$Labourfem / gii$Labourmale)
gii$Lfem<-gii$Labour.Force.Participation.Rate..Female.
gii$Lmale<-gii$Labour.Force.Participation.Rate..Male.
gii$Lfem<-gii$Labour.Force.Participation.Rate..Female.
gii$Lmale<-gii$Labour.Force.Participation.Rate..Male.
gii <- mutate(gii, labour_force = gii$Lfem / gii$Lmale)
hd$HDI <- hd$Human.Development.Index..HDI.
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
data("Boston")
dim(Boston)
scaled_crim <-boston_scaled$crim
data("Boston")
scaled_boston <- scale(Boston)
dist_eu <- dist(Boston)
summary(dist_eu)
scaled_boston <- scale(Boston)
dist_eu <- dist(scaled_boston)
summary(dist_eu)
km <-kmeans(dist_eu, centers = 15)
pairs(Boston, col = km$cluster)
km <-kmeans(dist_eu, centers = 10)
pairs(Boston, col = km$cluster)
km <-kmeans(dist_eu, centers = 14)
pairs(Boston, col = km$cluster)
km
summary(km)
km <-kmeans(dist_eu, centers = 2)
pairs(Boston, col = km$cluster)
km <-kmeans(dist_eu, centers = 5)
pairs(Boston, col = km$cluster)
km <-kmeans(dist_eu, centers = 15)
pairs(Boston, col = km$cluster)
pairs(scaled_boston, col = km$cluster)
ggpairs(scaled_boston, col = km$cluster)
library(corrplot), library(GGally)
library(corrplot)
library(GGally)
install.packages(GGally)
install.packages("GGally")
library(GGally)
library(GGally)
ggpairs(scaled_boston, col = km$cluster)
ggpairs(scaled_boston, col = km$cluster)
pairs(scaled_boston, col = km$cluster)
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
twcss <- sapply(1:10, function(k){kmeans(dist_eu, k)$tot.withinss})
plot(1:k_max, twcss, type='b')
plot(1:10, twcss, type='b')
km <-kmeans(dist_eu, centers = 3)
pairs(scaled_boston, col = km$cluster)
human <- inner_join(gii, hd, by = Country, suffix = c(".gii", ".hd"))
human <- inner_join(gii, hd, by = "Country", suffix = c(".gii", ".hd"))
summary(human)
names(gii)
3:10
select(gii, -(3:10))
dlyr::select(gii, -(3:10))
dplyr::select(gii, -(3:10))
q <- dplyr::select(gii, -(3:10))
str(q)
c(3:10)
-c(3:10)
-c(3:10,15)
q <- dplyr::select(gii, -c(3:10,15))
str(q)
q <- dplyr::select(gii, -c(3:10))
-c(3:10)
q <- dplyr::select(gii, -c(3:10))
str(q)
-c(3:10, 7:9)
q <- dplyr::select(gii, -c(3:10, 7:9))
str(q)
-c(3:10, 7:9)
q <- dplyr::select(gii)
str(q)
q
gii
summary(gii)
-c(3:10,16:19)
q <- dplyr::select(gii, -c(3:10,16:19))
str(q)
-c(3:10,15:20)
q <- dplyr::select(gii, -c(3:10,15:20))
str(q)
gii <- dplyr::select(gii, -c(3:10,15:20))
str(gii)
gii <- mutate(gii, secondary_edu = gii$secedufem / gii$secedumale)
gii <- mutate(gii, labour_force = gii$Lfem / gii$Lmale)
str(hd)
summary(hd)
str(hd)
hd <- dplyr::select(hd, -c(3:8))
hd
str(hd)
str(hd)
hd <- dplyr::select(hd, -c())
hd
str(hd)
hd <- dplyr::select(gii, c(1:17))
hd <- dplyr::select(gii, c(1:16))
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
hd$HDI <- hd$Human.Development.Index..HDI.
hd$LEAB<- hd$Life.Expectancy.at.Birth
hd$EYOE<- hd$Expected.Years.of.Education
hd$meanEYOE<-hd$Mean.Years.of.Education
hd$GNI<-hd$Gross.National.Income..GNI..per.Capita
hd$GNIHDI <-hd$GNI.per.Capita.Rank.Minus.HDI.Rank
hd$HDI.Rank
hd$Country
str(hd)
hd <- dplyr::select(hd, -c(3:8))
hd
str(hd)
gii <- mutate(gii, secondary_edu = gii$secedufem / gii$secedumale)
gii <- mutate(gii, labour_force = gii$Lfem / gii$Lmale)
str(hd)
library(dplyr); library(ggplot2)
gii <- mutate(gii, secondary_edu = gii$secedufem / gii$secedumale)
gii <- mutate(gii, secondary_edu = gii$secedufem / gii$secedumale)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
str(gii)
dim(gii)
summary(hd)
summary(gii)
hd$HDI <- hd$Human.Development.Index..HDI.
hd$LEAB<- hd$Life.Expectancy.at.Birth
hd$EYOE<- hd$Expected.Years.of.Education
hd$meanEYOE<-hd$Mean.Years.of.Education
hd$GNI<-hd$Gross.National.Income..GNI..per.Capita
hd$GNIHDI <-hd$GNI.per.Capita.Rank.Minus.HDI.Rank
hd$HDI.Rank
hd$Country
gii$GII.Rank
gii$Country
gii$GenderGII <-gii$Gender.Inequality.Index..GII.
gii$MaMo<- gii$Maternal.Mortality.Ratio
gii$adolBR<-gii$Adolescent.Birth.Rate
gii$PRiP<-gii$Percent.Representation.in.Parliament
gii$secedufem<-gii$Population.with.Secondary.Education..Female.
gii$secedumale<-gii$Population.with.Secondary.Education..Male.
gii$Lfem<-gii$Labour.Force.Participation.Rate..Female.
gii$Lmale<-gii$Labour.Force.Participation.Rate..Male.
gii <- dplyr::select(gii, -c(3:10,15:20))
str(gii)
gii$GII.Rank
gii$Country
lda.fit <- lda(crime ~ ., data = train)
library(tidyverse)
library(corrplot)
library(GGAlly)
library(tidyverse)
library(corrplot)
km <-kmeans(dist_eu, centers = 3)
pairs(scaled_boston, col = km$cluster)
twcss <- sapply(1:10, function(k){kmeans(dist_eu, k)$tot.withinss})
plot(1:10, twcss, type='b')
knitr::opts_chunk$set(echo = TRUE)
human <-read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", sep = ",", header = TRUE)
str(human)
dim(human)
str(human)
dim(human)
str(human)
dim(human)
pairs(human)
pairs(human, col = "red")
summary(human)
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
human_std <- scale(human)
summary(human_std)
pca_human <- prcomp(human_std)
pca_human_std <- prcomp(human_std)
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
pca_human_std <- prcomp(human_std)
biplot(pca_human_std, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
pairs(human, col = "deeppink2")
s <-summary(pca_human_std)
s
pca_pr <- round(100*s$importance[2,], digits = 1)
pca_pr
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
biplot(pca_human_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
install.packages("Factominer")
install.packages("FactoMineR")
library(FactoMineR)
dat("tea")
data("tea")
str(tea)
dim(tea)
pairs(tea, col = "deeppink2")
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
library(FactoMineR), library(ggplot2), library(dplyr), library(tidyr)
library(FactoMineR)
library(ggplot2)
library(dplyr)
library(tidyr)
data("tea")
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch")
tea_time <- select(tea, one_of(keep_columns))
summary(tea_time)
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
gather(tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
mca <- MCA(tea_time, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8), col = "deeppink2")
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch")
tea_time <- select(tea, one_of(keep_columns))
tea_time <- select(tea, one_of(keep_columns))
summary(tea_time)
keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch")
tea_time <- select(tea, one_of(keep_columns))
human <-read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", sep = ",", header = TRUE)
str(human)
dim(human)
pairs(human, col = "deeppink2")
summary(human)
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
human_std <- scale(human)
summary(human_std)
pca_human_std <- prcomp(human_std)
biplot(pca_human_std, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
s <-summary(pca_human_std)
s
pca_pr <- round(100*s$importance[2,], digits = 1)
pca_pr
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
biplot(pca_human_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
s <-summary(pca_human_std)
s
library(FactoMineR)
library(ggplot2)
library(dplyr)
library(tidyr)
data("tea")
str(tea)
cor_matrix<-cor(pc_lab) %>% round(digits = 2)
?correlation
??correlation
dim(tea)
keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch")
tea_time <- select(tea, one_of(keep_columns))
summary(tea_time)
gather(tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
mca <- MCA(tea_time, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
mca <- MCA(tea_time, graph = FALSE)
summary(mca)
human_ <- select(human, -Country)
human <-read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", sep = ",", header = TRUE)
